/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vectorHelper;

import Vector.Vector3d;
import java.text.DecimalFormat;

/**
 *
 * @author Nick
 */
public class VectorHelper extends javax.swing.JFrame {
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form VectorHelper
     */
    public VectorHelper() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vectorA1Field = new javax.swing.JTextField();
        vectorB1Field = new javax.swing.JTextField();
        vectorALabel = new javax.swing.JLabel();
        vectorBLabel = new javax.swing.JLabel();
        calculateButton = new javax.swing.JButton();
        dotProductLabel = new javax.swing.JLabel();
        crossProductLabel = new javax.swing.JLabel();
        crossProductMagnitudeLabel = new javax.swing.JLabel();
        vectorB2Field = new javax.swing.JTextField();
        vectorA3Field = new javax.swing.JTextField();
        vectorB3Field = new javax.swing.JTextField();
        vectorA2Field = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        errorPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        angleLabel = new javax.swing.JLabel();
        compLabel = new javax.swing.JLabel();
        projLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vector Wizard");

        vectorA1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorA1FieldActionPerformed(evt);
            }
        });

        vectorB1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorB1FieldActionPerformed(evt);
            }
        });

        vectorALabel.setText("Vector A");

        vectorBLabel.setText("Vector B");

        calculateButton.setText("Calculate!");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        dotProductLabel.setText("Dot Product: ");

        crossProductLabel.setText("Cross Product:                    ");

        crossProductMagnitudeLabel.setText("Cross Product Magnitude:                ");

        vectorB2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorB2FieldActionPerformed(evt);
            }
        });

        vectorA3Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorA3FieldActionPerformed(evt);
            }
        });

        vectorB3Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorB3FieldActionPerformed(evt);
            }
        });

        vectorA2Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorA2FieldActionPerformed(evt);
            }
        });

        errorPane.setBorder(null);
        errorPane.setToolTipText("");
        jScrollPane1.setViewportView(errorPane);

        jLabel1.setText("Errors:");

        angleLabel.setText("Acute Angle Between Vectors:       ");

        compLabel.setText("Comp(A)B:");

        projLabel.setText("Proj(A)B:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vectorBLabel)
                        .addGap(18, 18, 18)
                        .addComponent(vectorB1Field)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vectorB2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vectorB3Field, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vectorALabel)
                        .addGap(18, 18, 18)
                        .addComponent(vectorA1Field)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vectorA2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vectorA3Field, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dotProductLabel)
                    .addComponent(crossProductLabel)
                    .addComponent(crossProductMagnitudeLabel)
                    .addComponent(angleLabel)
                    .addComponent(compLabel)
                    .addComponent(projLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calculateButton)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 24, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {vectorA1Field, vectorA2Field, vectorA3Field, vectorB1Field, vectorB2Field, vectorB3Field});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vectorA1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vectorALabel)
                            .addComponent(vectorA2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vectorA3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vectorB1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vectorBLabel)
                            .addComponent(vectorB2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vectorB3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(calculateButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dotProductLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crossProductLabel)
                        .addGap(14, 14, 14)
                        .addComponent(crossProductMagnitudeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(angleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(projLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void vectorA1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorA1FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vectorA1FieldActionPerformed

    private void vectorB1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorB1FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vectorB1FieldActionPerformed

    private boolean isDouble(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private static boolean error;   
    private final int accuracy = 4;
    private final DecimalFormat df = new DecimalFormat();
  
    private void showInputError(String field) {
        errorPane.setText(field + " has invalid input!\nPlease enter one number.");
        error = true;
    }
    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed

        df.setMaximumFractionDigits(accuracy);
        
        // Generate value arrays to store values input by the user
        double A[] = new double[3];
        double B[] = new double[3];

        // Store user input in a variable
        String vectorA1text = vectorA1Field.getText();
        String vectorA2text = vectorA2Field.getText();
        String vectorA3text = vectorA3Field.getText();
        String vectorB1text = vectorB1Field.getText();
        String vectorB2text = vectorB2Field.getText();
        String vectorB3text = vectorB3Field.getText();

        // Parse input and store it in the respective array location, with error checking
        // No errors until one happens
        error = false;

        if (isDouble(vectorA1text)) {
            A[0] = format(Double.parseDouble(vectorA1text));
        } else {
            showInputError("A1");
        }

        if (isDouble(vectorA2text)) {
            A[1] = format(Double.parseDouble(vectorA2text));
        } else {
            showInputError("A2");
        }

        if (isDouble(vectorA3text)) {
            A[2] = format(Double.parseDouble(vectorA3text));
        } else {
            showInputError("A3");
        }

        if (isDouble(vectorB1text)) {
            B[0] = format(Double.parseDouble(vectorB1text));
        } else {
            showInputError("B1");
        }

        if (isDouble(vectorB2text)) {
            B[1] = format(Double.parseDouble(vectorB2text));
        } else {
            showInputError("B2");
        }

        if (isDouble(vectorB3text)) {
            B[2] = format(Double.parseDouble(vectorB3text));
        } else {
            showInputError("B3");
        }

        // If no error, compute values and display them
        if (!error) {

            // Initialize vectors with array values
            Vector3d vectorA = new Vector3d(A);
            Vector3d vectorB = new Vector3d(B);

            // Get dot product, round
            double dot = format(Vector3d.dot(vectorA, vectorB));

            // Get cross product, round (little more complex)
            Vector3d aCrossB = Vector3d.cross(vectorA, vectorB);

            double crossRoundX = format(aCrossB.getX());
            double crossRoundY = format(aCrossB.getY());
            double crossRoundZ = format(aCrossB.getZ());

            aCrossB.set(crossRoundX, crossRoundY, crossRoundZ);

            // Get acute angle between vectors, round
            double roundAngle = format(Vector3d.angle(vectorA, vectorB));
            
            // Get scalar projection of b onto a
            double compVal = format(Vector3d.comp(vectorA, vectorB));
            
            // Get vector projection of b onto a, round
            Vector3d projVec = Vector3d.proj(vectorA, vectorB);
            
            double projRoundX = format(projVec.getX());
            double projRoundY = format(projVec.getY());
            double projRoundZ = format(projVec.getZ());
            
            projVec.set(projRoundX, projRoundY, projRoundZ);

            // display values
            errorPane.setText(" ");
            dotProductLabel.setText("Dot Product: " + dot);
            crossProductLabel.setText("Cross Product: " + aCrossB);
            crossProductMagnitudeLabel.setText("Cross Product Magnitude: "
                    + format(aCrossB.getLength()));
            angleLabel.setText("Acute Angle Between Vectors: " + roundAngle);
            compLabel.setText("Comp(A)B: " + compVal);
            projLabel.setText("Proj(A)B: " + projVec);
        }
    }//GEN-LAST:event_calculateButtonActionPerformed

    // helper function for formatting
    private double format(double d) {
        return Double.valueOf(df.format(d));
    }
    
    private void vectorB2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorB2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vectorB2FieldActionPerformed

    private void vectorA3FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorA3FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vectorA3FieldActionPerformed

    private void vectorB3FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorB3FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vectorB3FieldActionPerformed

    private void vectorA2FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorA2FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vectorA2FieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VectorHelper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VectorHelper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VectorHelper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VectorHelper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VectorHelper().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel angleLabel;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel compLabel;
    private javax.swing.JLabel crossProductLabel;
    private javax.swing.JLabel crossProductMagnitudeLabel;
    private javax.swing.JLabel dotProductLabel;
    private javax.swing.JTextPane errorPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel projLabel;
    private javax.swing.JTextField vectorA1Field;
    private javax.swing.JTextField vectorA2Field;
    private javax.swing.JTextField vectorA3Field;
    private javax.swing.JLabel vectorALabel;
    private javax.swing.JTextField vectorB1Field;
    private javax.swing.JTextField vectorB2Field;
    private javax.swing.JTextField vectorB3Field;
    private javax.swing.JLabel vectorBLabel;
    // End of variables declaration//GEN-END:variables
}
